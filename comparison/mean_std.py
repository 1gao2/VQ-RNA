import numpy as np
#
# # Example: a 2D list where each row represents a set of values
values = [
    [0.8660, 0.8351, 0.9034, 0.7893, 0.8681, 0.8321, 0.9145, 0.8409, 0.8469, 0.7207],
    [0.8660, 0.8298, 0.9116, 0.7929, 0.8667, 0.8355, 0.9096, 0.8434, 0.8365, 0.7334],
    [0.8924, 0.8702, 0.9259, 0.8120, 0.8752, 0.8492, 0.9283, 0.8454, 0.8593, 0.7469],
    [0.8736, 0.8335, 0.8960, 0.7960, 0.8714, 0.8415, 0.9128, 0.8440, 0.8382, 0.7298],
    [0.8641, 0.8473, 0.9116, 0.7996, 0.8620, 0.8377, 0.9077, 0.8410, 0.8465, 0.7282],
    [0.8100, 0.8351, 0.8748, 0.7885, 0.8542, 0.8218, 0.9052, 0.8497, 0.7612, 0.6918],
    [0.8302, 0.8287, 0.8830, 0.7751, 0.8554, 0.8287, 0.8808, 0.8523, 0.7460, 0.6885],
    [0.8541, 0.8659, 0.9048, 0.8258, 0.8687, 0.8473, 0.9095, 0.8546, 0.7730, 0.7167],
    [0.8365, 0.8394, 0.8503, 0.7974, 0.8619, 0.8361, 0.8900, 0.8539, 0.7561, 0.6846],
    [0.8038, 0.8532, 0.8816, 0.7956, 0.8606, 0.8318, 0.9084, 0.8446, 0.7544, 0.6748],
    [0.9220, 0.8351, 0.9320, 0.7902, 0.8819, 0.8424, 0.9238, 0.8321, 0.9298, 0.7489],
    [0.9019, 0.8308, 0.9402, 0.8107, 0.8778, 0.8424, 0.9384, 0.8345, 0.9241, 0.7770],
    [0.9308, 0.8745, 0.9470, 0.7982, 0.8818, 0.8511, 0.9470, 0.8364, 0.9429, 0.7763],
    [0.9107, 0.8277, 0.9415, 0.7947, 0.8809, 0.8467, 0.9357, 0.8341, 0.9175, 0.7738],
    [0.9245, 0.8415, 0.9415, 0.8036, 0.8634, 0.8436, 0.9070, 0.8373, 0.9355, 0.7802],
    [0.7373, 0.6706, 0.8086, 0.5792, 0.7365, 0.6656, 0.8293, 0.6821, 0.7023, 0.4428],
    [0.7344, 0.6611, 0.8252, 0.5882, 0.7340, 0.6714, 0.8209, 0.6870, 0.6848, 0.4678],
    [0.7875, 0.7408, 0.8526, 0.6255, 0.7506, 0.6987, 0.8572, 0.6912, 0.7281, 0.4945],
    [0.7518, 0.6681, 0.7955, 0.5927, 0.7431, 0.6836, 0.8272, 0.6883, 0.6844, 0.4607],
    [0.7355, 0.6949, 0.8254, 0.6009, 0.7244, 0.6756, 0.8163, 0.6825, 0.7041, 0.4586],
    [0.9186, 0.9067, 0.9496, 0.8559, 0.9354, 0.8942, 0.9627, 0.9170, 0.9167, 0.7939],
    [0.9231, 0.8907, 0.9437, 0.8663, 0.9363, 0.9029, 0.9621, 0.9194, 0.9115, 0.7951],
    [0.9409, 0.9201, 0.9569, 0.8717, 0.9374, 0.9153, 0.9674, 0.9217, 0.9236, 0.8168],
    [0.9312, 0.9041, 0.9365, 0.8490, 0.9360, 0.9068, 0.9648, 0.9197, 0.9177, 0.7983],
    [0.9198, 0.9145, 0.9579, 0.8588, 0.9337, 0.9102, 0.9642, 0.9173, 0.9187, 0.8017]
]

# Calculate mean and standard deviation for each row
means = [round(np.mean(row), 4) for row in values]
std_devs = [round(np.std(row), 4) for row in values]

for i in range(25):
    # print(f"{means[i]:.4f} ± {std_devs[i]:.4f}")
    print(f"{means[i]:.4f}")



# import numpy as np
#
# # 数据集的平均值和标准差，每一行包含一个数据集的平均值和标准差
# averages = np.array([
#     [0.8924, 0.8702, 0.9259, 0.8120, 0.8752, 0.8492, 0.9283, 0.8454, 0.8593, 0.7469],
#     [0.8667, 0.8463, 0.8864, 0.7955, 0.8757, 0.8337, 0.8966, 0.8265, 0.8415, 0.7252],
#     [0.8497, 0.8282, 0.8517, 0.7951, 0.8416, 0.8069, 0.8687, 0.8281, 0.8237, 0.6692],
#     [0.8396, 0.7995, 0.5932, 0.7756, 0.8750, 0.7710, 0.8766, 0.8725, 0.8008, 0.6880],
#     [0.6679, 0.6835, 0.5265, 0.6898, 0.8780, 0.7554, 0.8444, 0.8710, 0.8017, 0.6583],
#     [0.8623, 0.8059, 0.8592, 0.7307, 0.8484, 0.8374, 0.8714, 0.7867, 0.8203, 0.7061],
#     [0.8541, 0.8659, 0.9048, 0.8258, 0.8687, 0.8473, 0.9095, 0.8546, 0.7730, 0.7167],
#     [0.8377, 0.8532, 0.8653, 0.7689, 0.8832, 0.8237, 0.8656, 0.8324, 0.7772, 0.6144],
#     [0.8277, 0.8457, 0.8503, 0.7707, 0.8521, 0.8062, 0.8726, 0.8302, 0.7334, 0.6112],
#     [0.8415, 0.8213, 0.5891, 0.7529, 0.8876, 0.7932, 0.8613, 0.8801, 0.6701, 0.5876],
#     [0.6050, 0.6968, 0.5252, 0.6302, 0.8699, 0.7769, 0.8071, 0.8685, 0.6642, 0.5200],
#     [0.8239, 0.7915, 0.8653, 0.7511, 0.8371, 0.8374, 0.9003, 0.7970, 0.7452, 0.6453],
#     [0.9308, 0.8745, 0.9470, 0.7982, 0.8818, 0.8511, 0.9470, 0.8364, 0.9429, 0.7763],
#     [0.8956, 0.8394, 0.9075, 0.8222, 0.8682, 0.8436, 0.9275, 0.8207, 0.9037, 0.8332],
#     [0.8717, 0.8106, 0.8531, 0.8195, 0.8310, 0.8075, 0.8649, 0.8260, 0.9110, 0.7259],
#     [0.8377, 0.7777, 0.5973, 0.7982, 0.8623, 0.7489, 0.8919, 0.8650, 0.9273, 0.7859],
#     [0.7308, 0.6702, 0.5279, 0.7493, 0.8860, 0.7340, 0.8816, 0.8735, 0.9347, 0.7930],
#     [0.9006, 0.8202, 0.8531, 0.7102, 0.8597, 0.8374, 0.8427, 0.7764, 0.8931, 0.7655],
#     [0.7875, 0.7408, 0.8526, 0.6255, 0.7506, 0.6987, 0.8572, 0.6912, 0.7281, 0.4945],
#     [0.7353, 0.6946, 0.7738, 0.5966, 0.7516, 0.6680, 0.7948, 0.6534, 0.6904, 0.4629],
#     [0.7002, 0.6574, 0.7042, 0.5913, 0.6835, 0.6138, 0.7377, 0.6563, 0.6570, 0.3400],
#     [0.6796, 0.5997, 0.1868, 0.5519, 0.7502, 0.5433, 0.7537, 0.7451, 0.6248, 0.3845],
#     [0.3411, 0.3686, 0.0532, 0.3858, 0.7563, 0.5133, 0.6913, 0.7421, 0.6253, 0.3326],
#     [0.7276, 0.6133, 0.7201, 0.4631, 0.6972, 0.6749, 0.7453, 0.5739, 0.6466, 0.4150],
#     [0.9409, 0.9201, 0.9569, 0.8717, 0.9374, 0.9153, 0.9674, 0.9217, 0.9236, 0.8168],
#     [0.9302, 0.9155, 0.9375, 0.8504, 0.9414, 0.8822, 0.9484, 0.9049, 0.9147, 0.8163],
#     [0.9104, 0.8945, 0.9171, 0.8635, 0.9146, 0.8749, 0.9361, 0.9035, 0.8810, 0.7349],
#     [0.9047, 0.8802, 0.6310, 0.8450, 0.9422, 0.8438, 0.9333, 0.9411, 0.8567, 0.7677],
#     [0.7324, 0.7267, 0.5384, 0.7622, 0.9399, 0.8229, 0.9094, 0.9413, 0.8584, 0.6951],
#     [0.9197, 0.8857, 0.9170, 0.8179, 0.9219, 0.9074, 0.9434, 0.8690, 0.8978, 0.7721]
# ])
#
# # 数据集的标准差
# std_devs = np.array([
#     [0.0078, 0.0080, 0.0040, 0.0109, 0.0009, 0.0063, 0.0024, 0.0008, 0.0042, 0.0099],
#     [0.0032, 0.0121, 0.0196, 0.0089, 0.0017, 0.0077, 0.0053, 0.0026, 0.0155, 0.0120],
#     [0.0050, 0.0096, 0.0167, 0.0099, 0.0068, 0.0119, 0.0034, 0.0041, 0.0077, 0.0094],
#     [0.0139, 0.0197, 0.0969, 0.0142, 0.0036, 0.0147, 0.0115, 0.0033, 0.0157, 0.0096],
#     [0.0772, 0.0706, 0.0281, 0.0391, 0.0025, 0.0142, 0.0090, 0.0027, 0.0107, 0.0284],
#     [0.0149, 0.0155, 0.0162, 0.0228, 0.0039, 0.0101, 0.0059, 0.0056, 0.0101, 0.0237],
#     [0.0047, 0.0194, 0.0074, 0.0301, 0.0061, 0.0071, 0.0047, 0.0100, 0.0159, 0.0168],
#     [0.0230, 0.0373, 0.0253, 0.0687, 0.0072, 0.0273, 0.0115, 0.0145, 0.0357, 0.0511],
#     [0.0085, 0.0231, 0.0155, 0.0200, 0.0125, 0.0133, 0.0117, 0.0112, 0.0294, 0.0396],
#     [0.0092, 0.0279, 0.0845, 0.0228, 0.0038, 0.0327, 0.0116, 0.0068, 0.0414, 0.0610],
#     [0.1226, 0.0950, 0.0454, 0.0963, 0.0143, 0.0424, 0.0282, 0.0087, 0.0164, 0.1275],
#     [0.0164, 0.0241, 0.0303, 0.0409, 0.0116, 0.0181, 0.0245, 0.0220, 0.0161, 0.0498],
#     [0.0191, 0.0153, 0.0117, 0.0363, 0.0069, 0.0184, 0.0089, 0.0108, 0.0113, 0.0272],
#     [0.0213, 0.0427, 0.0238, 0.0570, 0.0088, 0.0139, 0.0060, 0.0135, 0.0539, 0.0612],
#     [0.0102, 0.0251, 0.0386, 0.0211, 0.0166, 0.0171, 0.0113, 0.0118, 0.0240, 0.0250],
#     [0.0296, 0.0166, 0.1185, 0.0160, 0.0067, 0.0253, 0.0189, 0.0082, 0.0664, 0.0585],
#     [0.0920, 0.0634, 0.0388, 0.0565, 0.0135, 0.0494, 0.0190, 0.0078, 0.0362, 0.0831],
#     [0.0370, 0.0458, 0.0442, 0.0520, 0.0120, 0.0097, 0.0332, 0.0147, 0.0191, 0.0342],
#     [0.0169, 0.0158, 0.0084, 0.0218, 0.0018, 0.0126, 0.0052, 0.0017, 0.0074, 0.0203],
#     [0.0062, 0.0236, 0.0389, 0.0158, 0.0034, 0.0147, 0.0101, 0.0052, 0.0367, 0.0287],
#     [0.0101, 0.0190, 0.0330, 0.0200, 0.0134, 0.0238, 0.0070, 0.0080, 0.0146, 0.0175],
#     [0.0273, 0.0399, 0.1941, 0.0281, 0.0073, 0.0293, 0.0232, 0.0065, 0.0429, 0.0202],
#     [0.1527, 0.1425, 0.0562, 0.0786, 0.0047, 0.0270, 0.0167, 0.0054, 0.0305, 0.0468],
#     [0.0317, 0.0310, 0.0312, 0.0446, 0.0078, 0.0201, 0.0090, 0.0115, 0.0211, 0.0476],
#     [0.0069, 0.0047, 0.0040, 0.0075, 0.0017, 0.0052, 0.0028, 0.0005, 0.0040, 0.0093],
#     [0.0060, 0.0287, 0.0102, 0.0425, 0.0011, 0.0294, 0.0042, 0.0023, 0.0081, 0.0144],
#     [0.0110, 0.0074, 0.0091, 0.0030, 0.0053, 0.0150, 0.0048, 0.0039, 0.0091, 0.0133],
#     [0.0070, 0.0130, 0.1108, 0.0135, 0.0014, 0.0117, 0.0101, 0.0024, 0.0061, 0.0112],
#     [0.0779, 0.0919, 0.0232, 0.0469, 0.0026, 0.0118, 0.0080, 0.0022, 0.0187, 0.0491],
#     [0.0123, 0.0121, 0.0172, 0.0210, 0.0014, 0.0069, 0.0036, 0.0055, 0.0088, 0.0264]
# ])
#
# # 对每一行进行处理
# for row_idx in range(averages.shape[0]):
#     row_averages = averages[row_idx]
#     row_std_devs = std_devs[row_idx]
#
#     # 计算每行的总平均值
#     row_total_mean = np.mean(row_averages)
#
#     # 计算每个标准差的平方
#     row_std_devs_squared = row_std_devs ** 2
#
#     # 计算每行的总标准差
#     row_total_std = np.sqrt(np.mean(row_std_devs_squared))
#
#     # 输出结果，保留4位小数
#     print(f"第{row_idx + 1}行 总平均值: {row_total_mean:.4f} 第{row_idx + 1}行 总标准差: {row_total_std:.4f}")


